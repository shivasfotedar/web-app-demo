pipeline{
    agent any
     parameters {
        string(name: 'ARTIFACT_NAME', defaultValue: 'Blue', description: 'Artifact to be used for deployment')
        string(name: 'ENV', defaultValue: 'test', description: 'Env name')
        string(name: 'VPC_CIDR', defaultValue: 'default', description: 'VPC Cidr to be set up')
        string(name: 'PRIVATE_SUBNETS', defaultValue: 'default', description: 'Priavte subnets to be set up')
        string(name: 'PUBLIC_SUBNETS', defaultValue: 'default', description: 'Public subnets to be set up')
        choice(name: 'ACTION', choices:['apply', 'destroy'] , description: 'Do you want to perform terraform apply or destroy?')
    }
    stages{
        stage("Create New Environment"){
            steps{
                script{
                    if(ACTION == "apply"){
                dir('terraform'){
                    withAWS(credentials: 'aws_creds', region: 'us-east-1') {
                        sh 'bash setup.sh'
                        sh 'terraform init -reconfigure'
                        sh 'terraform apply -target=module.vpc -auto-approve'
                        sh 'terraform apply -auto-approve'
                    }
                }
                    }
                    else
                    {
                       dir('terraform'){
                    withAWS(credentials: 'aws_creds', region: 'us-east-1') {
                        sh 'bash setup.sh'
                        sh 'terraform init -reconfigure'
                        sh 'terraform destroy -auto-approve' 
                    }
            }
        }
    }
            }
  
}
}
}
